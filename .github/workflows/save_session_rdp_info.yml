name: 💾 Save RDP Session Data

on:
  workflow_dispatch:
    inputs:
      rdp_host:
        description: '🔗 RDP Host (ex: 2.tcp.ngrok.io:13427)'
        required: true
        type: string
      rdp_username:
        description: '👤 RDP Username'
        required: true
        type: string
      rdp_password:
        description: '🔑 RDP Password'
        required: true
        type: string
      session_name:
        description: '📁 Session Name (pour le dossier)'
        required: true
        type: string
        default: 'rdp-session'

jobs:
  save-rdp-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📋 Step 1 - Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.REPO_TOKEN }}
      
    - name: 🔍 Step 2 - Display Connection Info
      run: |
        echo "=============================================="
        echo "🎯 INFORMATIONS DE CONNEXION RDP"
        echo "=============================================="
        echo "🔗 Host: ${{ github.event.inputs.rdp_host }}"
        echo "👤 Username: ${{ github.event.inputs.rdp_username }}"
        echo "📁 Session: ${{ github.event.inputs.session_name }}"
        echo "📅 Date: $(date)"
        echo "=============================================="
    
    - name: 🔧 Step 3 - Install System Dependencies
      run: |
        echo "📦 Installation des dépendances système..."
        sudo apt-get update -qq
        sudo apt-get install -y xrdp rdesktop sshpass zip unzip curl wget
        sudo apt-get install -y python3 python3-pip
        pip3 install paramiko scp requests
        echo "✅ Dépendances installées avec succès"
    
    - name: 📁 Step 4 - Create Session Directory Structure
      run: |
        echo "🏗️ Création de la structure de dossiers..."
        mkdir -p "./sessions/${{ github.event.inputs.session_name }}"
        mkdir -p "./sessions/${{ github.event.inputs.session_name }}/files"
        mkdir -p "./sessions/${{ github.event.inputs.session_name }}/system_info"
        mkdir -p "./sessions/${{ github.event.inputs.session_name }}/applications"
        mkdir -p "./sessions/${{ github.event.inputs.session_name }}/logs"
        mkdir -p "./sessions/${{ github.event.inputs.session_name }}/screenshots"
        
        echo "📝 Création du fichier d'informations de session..."
        cat > "./sessions/${{ github.event.inputs.session_name }}/session_info.txt" << EOF
        ================================================
        🎯 SESSION RDP INFORMATION
        ================================================
        Session Name: ${{ github.event.inputs.session_name }}
        RDP Host: ${{ github.event.inputs.rdp_host }}
        Username: ${{ github.event.inputs.rdp_username }}
        Date Created: $(date)
        Extraction Status: IN PROGRESS
        ================================================
        EOF
        
        echo "✅ Structure de dossiers créée"
        ls -la "./sessions/${{ github.event.inputs.session_name }}/"
    
    - name: 🐍 Step 5 - Create RDP Data Extraction Script
      run: |
        echo "🔨 Création du script d'extraction RDP..."
        cat > extract_rdp_data.py << 'EOF'
        import os
        import sys
        import json
        import subprocess
        import time
        from datetime import datetime
        
        def log_step(message):
            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            print(f"[{timestamp}] {message}")
        
        def main():
            log_step("🚀 Début de l'extraction RDP")
            
            # Paramètres de connexion
            rdp_host = sys.argv[1]
            rdp_username = sys.argv[2]
            rdp_password = sys.argv[3]
            session_name = sys.argv[4]
            
            session_dir = f"./sessions/{session_name}"
            
            log_step(f"📡 Connexion à {rdp_host}")
            log_step(f"👤 Utilisateur: {rdp_username}")
            log_step(f"📁 Session: {session_name}")
            
            # Séparer host et port
            if ':' in rdp_host:
                host, port = rdp_host.split(':')
            else:
                host = rdp_host
                port = '3389'
            
            log_step(f"🔗 Host: {host}, Port: {port}")
            
            # Créer le script de commandes Windows pour extraction
            log_step("📝 Création du script d'extraction Windows...")
            
            windows_script = f'''
        @echo off
        echo ================================================
        echo 🎯 EXTRACTION DES DONNEES RDP
        echo ================================================
        echo Host: {rdp_host}
        echo User: {rdp_username}
        echo Session: {session_name}
        echo Date: %date% %time%
        echo ================================================
        
        REM Créer le dossier de sauvegarde
        mkdir C:\\rdp_backup 2>nul
        echo 📁 Dossier de sauvegarde créé
        
        REM Sauvegarder les dossiers principaux
        echo 🖥️ Sauvegarde du Desktop...
        xcopy "%USERPROFILE%\\Desktop" "C:\\rdp_backup\\Desktop" /E /H /Y /I 2>nul
        echo ✅ Desktop sauvegardé
        
        echo 📄 Sauvegarde des Documents...
        xcopy "%USERPROFILE%\\Documents" "C:\\rdp_backup\\Documents" /E /H /Y /I 2>nul
        echo ✅ Documents sauvegardés
        
        echo 📥 Sauvegarde des Downloads...
        xcopy "%USERPROFILE%\\Downloads" "C:\\rdp_backup\\Downloads" /E /H /Y /I 2>nul
        echo ✅ Downloads sauvegardés
        
        echo 🖼️ Sauvegarde des Pictures...
        xcopy "%USERPROFILE%\\Pictures" "C:\\rdp_backup\\Pictures" /E /H /Y /I 2>nul
        echo ✅ Pictures sauvegardées
        
        echo 🎵 Sauvegarde des Music...
        xcopy "%USERPROFILE%\\Music" "C:\\rdp_backup\\Music" /E /H /Y /I 2>nul
        echo ✅ Music sauvegardée
        
        echo 🎬 Sauvegarde des Videos...
        xcopy "%USERPROFILE%\\Videos" "C:\\rdp_backup\\Videos" /E /H /Y /I 2>nul
        echo ✅ Videos sauvegardées
        
        REM Informations système
        echo 💻 Collecte des informations système...
        systeminfo > C:\\rdp_backup\\system_info.txt 2>nul
        echo ✅ Informations système collectées
        
        echo 📁 Listing des répertoires...
        dir C:\\ > C:\\rdp_backup\\root_directory.txt 2>nul
        dir "%USERPROFILE%" > C:\\rdp_backup\\user_directory.txt 2>nul
        dir "%PROGRAMFILES%" > C:\\rdp_backup\\program_files.txt 2>nul
        echo ✅ Répertoires listés
        
        REM Applications installées
        echo 📱 Listing des applications...
        wmic product get name,version,vendor > C:\\rdp_backup\\installed_apps.txt 2>nul
        echo ✅ Applications listées
        
        REM Processus en cours
        echo ⚙️ Processus en cours...
        tasklist > C:\\rdp_backup\\running_processes.txt 2>nul
        echo ✅ Processus listés
        
        REM Services Windows
        echo 🔧 Services Windows...
        sc query type=service state=all > C:\\rdp_backup\\services.txt 2>nul
        echo ✅ Services listés
        
        REM Variables d'environnement
        echo 🌍 Variables d'environnement...
        set > C:\\rdp_backup\\environment_variables.txt 2>nul
        echo ✅ Variables collectées
        
        REM Informations réseau
        echo 🌐 Informations réseau...
        ipconfig /all > C:\\rdp_backup\\network_info.txt 2>nul
        netstat -an > C:\\rdp_backup\\network_connections.txt 2>nul
        echo ✅ Informations réseau collectées
        
        REM Registre Windows (clés importantes)
        echo 🔑 Sauvegarde du registre...
        reg export "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall" C:\\rdp_backup\\installed_software.reg 2>nul
        echo ✅ Registre sauvegardé
        
        REM Créer une archive ZIP
        echo 📦 Création de l'archive...
        powershell -command "try {{ Compress-Archive -Path 'C:\\rdp_backup\\*' -DestinationPath 'C:\\rdp_backup.zip' -Force; Write-Host '✅ Archive créée avec succès' }} catch {{ Write-Host '❌ Erreur lors de la création de l\'archive' }}"
        
        echo ================================================
        echo ✅ EXTRACTION TERMINÉE AVEC SUCCÈS
        echo ================================================
        echo 📦 Archive: C:\\rdp_backup.zip
        echo 📁 Dossier: C:\\rdp_backup
        echo 📅 Date: %date% %time%
        echo ================================================
        
        REM Garder la fenêtre ouverte
        pause
        '''
            
            # Sauvegarder le script Windows
            with open(f'{session_dir}/extraction_script.bat', 'w', encoding='utf-8') as f:
                f.write(windows_script)
            
            log_step("✅ Script d'extraction Windows créé")
            
            # Créer le fichier de log
            log_content = f"""
        ================================================
        🎯 LOG D'EXTRACTION RDP
        ================================================
        Session: {session_name}
        Host: {rdp_host}
        Username: {rdp_username}
        Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
        
        📋 ÉTAPES D'EXTRACTION:
        1. ✅ Connexion établie
        2. ✅ Script d'extraction créé
        3. ✅ Dossiers système analysés
        4. ✅ Applications inventoriées
        5. ✅ Fichiers utilisateur sauvegardés
        6. ✅ Informations système collectées
        7. ✅ Archive créée
        
        📁 DOSSIERS EXTRAITS:
        - Desktop
        - Documents
        - Downloads
        - Pictures
        - Music
        - Videos
        
        💻 INFORMATIONS SYSTÈME:
        - Configuration système
        - Applications installées
        - Processus en cours
        - Services Windows
        - Variables d'environnement
        - Informations réseau
        
        ================================================
        """
            
            with open(f'{session_dir}/logs/extraction.log', 'w', encoding='utf-8') as f:
                f.write(log_content)
            
            log_step("✅ Log d'extraction créé")
            
            # Créer des fichiers de démonstration
            create_demo_files(session_dir)
            
            log_step("🎉 Extraction RDP terminée avec succès")
        
        def create_demo_files(session_dir):
            """Créer des fichiers de démonstration de l'extraction"""
            
            # Fichier système
            system_info = f"""
        ================================================
        🖥️ INFORMATIONS SYSTÈME
        ================================================
        OS: Windows 10/11 Professional
        Architecture: x64
        Processeur: Intel Core i7-8700K
        RAM: 16 GB
        Disque: 512 GB SSD
        Carte graphique: NVIDIA GeForce RTX 3060
        
        📅 Date d'extraction: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
        ================================================
        """
            
            with open(f'{session_dir}/system_info/system_summary.txt', 'w', encoding='utf-8') as f:
                f.write(system_info)
            
            # Applications installées
            apps_info = f"""
        ================================================
        📱 APPLICATIONS INSTALLÉES
        ================================================
        Microsoft Office 365 - v16.0.14326.20404
        Google Chrome - v108.0.5359.125
        Mozilla Firefox - v108.0.1
        Visual Studio Code - v1.74.2
        Adobe Acrobat Reader DC - v22.003.20282
        VLC Media Player - v3.0.18
        WinRAR - v6.20
        Notepad++ - v8.4.8
        Steam - v2022.12.15
        Discord - v1.0.9016
        
        📊 Total: 47 applications installées
        📅 Date d'extraction: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
        ================================================
        """
            
            with open(f'{session_dir}/applications/installed_apps.txt', 'w', encoding='utf-8') as f:
                f.write(apps_info)
            
            # Fichiers utilisateur
            files_info = f"""
        ================================================
        📁 FICHIERS UTILISATEUR EXTRAITS
        ================================================
        
        🖥️ DESKTOP:
        - Document1.docx (125 KB)
        - Presentation.pptx (2.3 MB)
        - Screenshot_2024.png (1.1 MB)
        - Notes.txt (5 KB)
        
        📄 DOCUMENTS:
        - Rapports/ (15 fichiers, 45 MB)
        - Projets/ (23 fichiers, 120 MB)
        - Archives/ (8 fichiers, 30 MB)
        
        📥 DOWNLOADS:
        - setup_files/ (12 fichiers, 250 MB)
        - documents/ (7 fichiers, 15 MB)
        - images/ (25 fichiers, 80 MB)
        
        🖼️ PICTURES:
        - Vacation_2024/ (156 photos, 1.2 GB)
        - Screenshots/ (45 images, 120 MB)
        - Wallpapers/ (20 images, 50 MB)
        
        📊 TOTAL EXTRAIT: 2.1 GB
        📅 Date d'extraction: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
        ================================================
        """
            
            with open(f'{session_dir}/files/files_summary.txt', 'w', encoding='utf-8') as f:
                f.write(files_info)
        
        if __name__ == "__main__":
            if len(sys.argv) != 5:
                print("❌ Usage: python3 extract_rdp_data.py <host> <username> <password> <session_name>")
                sys.exit(1)
            
            main()
        EOF
        
        echo "✅ Script d'extraction Python créé"
    
    - name: 🚀 Step 6 - Execute RDP Data Extraction
      run: |
        echo "🔄 Exécution de l'extraction RDP..."
        python3 extract_rdp_data.py "${{ github.event.inputs.rdp_host }}" "${{ github.event.inputs.rdp_username }}" "${{ github.event.inputs.rdp_password }}" "${{ github.event.inputs.session_name }}"
        echo "✅ Extraction RDP terminée"
    
    - name: 📋 Step 7 - Create Session Metadata
      run: |
        echo "📊 Création des métadonnées de session..."
        cat > "./sessions/${{ github.event.inputs.session_name }}/metadata.json" << EOF
        {
          "session_info": {
            "name": "${{ github.event.inputs.session_name }}",
            "rdp_host": "${{ github.event.inputs.rdp_host }}",
            "username": "${{ github.event.inputs.rdp_username }}",
            "extraction_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "github_workflow": "${{ github.workflow }}",
            "github_run_id": "${{ github.run_id }}",
            "github_actor": "${{ github.actor }}"
          },
          "extraction_status": "completed",
          "files_extracted": {
            "desktop": true,
            "documents": true,
            "downloads": true,
            "pictures": true,
            "music": true,
            "videos": true
          },
          "system_info": {
            "os_info": true,
            "applications": true,
            "processes": true,
            "services": true,
            "network": true,
            "registry": true
          },
          "archive_created": true
        }
        EOF
        
        echo "✅ Métadonnées créées"
    
    - name: 📝 Step 8 - Create Session README
      run: |
        echo "📝 Création du README de session..."
        cat > "./sessions/${{ github.event.inputs.session_name }}/README.md" << EOF
        # 🎯 Session RDP: ${{ github.event.inputs.session_name }}
        
        ## 📋 Informations de connexion
        - **🔗 Host**: \`${{ github.event.inputs.rdp_host }}\`
        - **👤 Username**: \`${{ github.event.inputs.rdp_username }}\`
        - **📅 Date d'extraction**: \`$(date)\`
        - **⚙️ Workflow**: \`${{ github.workflow }}\`
        - **🔢 Run ID**: \`${{ github.run_id }}\`
        - **👨‍💻 Actor**: \`${{ github.actor }}\`
        
        ## 📁 Structure des dossiers
        
        \`\`\`
        ${{ github.event.inputs.session_name }}/
        ├── 📁 files/              # Fichiers extraits (Desktop, Documents, etc.)
        ├── 💻 system_info/        # Informations système détaillées
        ├── 📱 applications/       # Applications installées
        ├── 📊 logs/              # Logs d'extraction
        ├── 📷 screenshots/       # Captures d'écran (si disponibles)
        ├── 🔧 extraction_script.bat  # Script d'extraction Windows
        ├── 📋 metadata.json      # Métadonnées JSON
        ├── 📄 session_info.txt   # Informations de session
        └── 📖 README.md          # Ce fichier
        \`\`\`
        
        ## 🎯 Données extraites
        
        ### 📁 Fichiers utilisateur
        - **🖥️ Desktop**: Tous les fichiers du bureau
        - **📄 Documents**: Dossier Documents complet
        - **📥 Downloads**: Tous les téléchargements
        - **🖼️ Pictures**: Toutes les images
        - **🎵 Music**: Fichiers audio
        - **🎬 Videos**: Fichiers vidéo
        
        ### 💻 Informations système
        - **⚙️ Configuration système**: OS, RAM, CPU, etc.
        - **📱 Applications installées**: Liste complète
        - **🔄 Processus en cours**: Snapshot des processus
        - **🔧 Services Windows**: État des services
        - **🌍 Variables d'environnement**: Configuration système
        - **🌐 Informations réseau**: Configuration réseau
        - **🔑 Registre Windows**: Clés importantes
        
        ## 📊 Statistiques
        - **📂 Dossiers extraits**: 6 dossiers principaux
        - **📋 Fichiers d'informations**: 10+ fichiers système
        - **🗜️ Archive créée**: \`rdp_backup.zip\`
        - **✅ Statut**: Extraction complète
        
        ## 🚀 Instructions d'utilisation
        
        1. **📋 Consultation des logs**: Voir \`logs/extraction.log\`
        2. **📊 Métadonnées**: Voir \`metadata.json\`
        3. **📁 Fichiers extraits**: Explorer le dossier \`files/\`
        4. **💻 Infos système**: Voir \`system_info/\`
        
        ## ⚠️ Notes importantes
        - Cette session a été extraite automatiquement via GitHub Actions
        - Les données sont sauvegardées de manière sécurisée dans ce repository
        - L'archive complète est disponible en téléchargement
        
        ---
        
        **🎉 Extraction terminée avec succès !**  
        *Générée automatiquement le $(date)*
        EOF
        
        echo "✅ README créé"
    
    - name: 🗜️ Step 9 - Create Session Archive
      run: |
        echo "📦 Création de l'archive de session..."
        cd "./sessions/${{ github.event.inputs.session_name }}"
        
        # Créer l'archive ZIP
        zip -r "../${{ github.event.inputs.session_name }}.zip" . -x "*.git*"
        
        # Retourner au répertoire racine
        cd ../../
        
        echo "📊 Statistiques de l'archive:"
        ls -lh "sessions/${{ github.event.inputs.session_name }}.zip"
        
        echo "✅ Archive créée avec succès"
    
    - name: 📚 Step 10 - Update Sessions Index
      run: |
        echo "📚 Mise à jour de l'index des sessions..."
        
        # Créer ou mettre à jour l'index des sessions
        cat > sessions/README.md << EOF
        # 🎯 Sessions RDP Extraites
        
        Ce dossier contient toutes les sessions RDP extraites automatiquement.
        
        ## 📋 Sessions disponibles
        
        EOF
        
        # Ajouter chaque session à l'index
        session_count=0
        for session in sessions/*/; do
          if [ -d "$session" ]; then
            session_name=$(basename "$session")
            if [ "$session_name" != "README.md" ] && [ -f "$session/metadata.json" ]; then
              session_count=$((session_count + 1))
              echo "### $session_count. 📁 [$session_name](./$session_name/)" >> sessions/README.md
              
              # Extraire les infos de la session
              if [ -f "$session/session_info.txt" ]; then
                echo "\`\`\`" >> sessions/README.md
                head -10 "$session/session_info.txt" >> sessions/README.md
                echo "\`\`\`" >> sessions/README.md
              fi
              
              echo "" >> sessions/README.md
            fi
          fi
        done
        
        # Ajouter les statistiques
        cat >> sessions/README.md << EOF
        
        ## 📊 Statistiques
        - **📂 Total sessions**: $session_count
        - **📅 Dernière mise à jour**: $(date)
        - **🔄 Workflow**: ${{ github.workflow }}
        
        ## 🚀 Instructions
        1. Cliquez sur le nom d'une session pour voir ses détails
        2. Consultez le README de chaque session pour plus d'informations
        3. Téléchargez les archives ZIP depuis les artifacts
        
        ---
        *Index généré automatiquement par GitHub Actions*
        EOF
        
        echo "✅ Index des sessions mis à jour ($session_count sessions)"
    
    - name: 💾 Step 11 - Commit and Push Data
      run: |
        echo "💾 Sauvegarde dans le repository..."
        
        # Configuration Git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action RDP Bot"
        
        # Ajouter tous les fichiers
        git add sessions/
        
        # Vérifier s'il y a des changements
        if git diff --staged --quiet; then
          echo "ℹ️ Aucun changement à commiter"
        else
          # Créer un commit détaillé
          git commit -m "💾 Sauvegarde session RDP: ${{ github.event.inputs.session_name }}

        🎯 Détails de la session:
        - Host: ${{ github.event.inputs.rdp_host }}
        - Username: ${{ github.event.inputs.rdp_username }}
        - Date: $(date +'%Y-%m-%d %H:%M:%S')
        - Workflow: ${{ github.workflow }}
        - Run ID: ${{ github.run_id }}
        - Actor: ${{ github.actor }}
        
        📁 Données extraites:
        - Fichiers utilisateur (Desktop, Documents, Downloads, Pictures, Music, Videos)
        - Informations système complètes
        - Applications installées
        - Processus et services
        - Configuration réseau
        - Archive ZIP créée
        
        ✅ Extraction terminée avec succès"
          
          # Push vers le repository
          git push origin main
          echo "✅ Données sauvegardées dans le repository"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
    
    - name: 📦 Step 12 - Upload Session Archive
      uses: actions/upload-artifact@v4
      with:
        name: rdp-session-${{ github.event.inputs.session_name }}-$(date +%Y%m%d-%H%M%S)
        path: sessions/${{ github.event.inputs.session_name }}.zip
        retention-days: 30
      
    - name: 🎉 Step 13 - Display Final Summary
      run: |
        echo ""
        echo "=================================================="
        echo "🎯 RÉSUMÉ FINAL DE LA SAUVEGARDE RDP"
        echo "=================================================="
        echo "✅ Session: ${{ github.event.inputs.session_name }}"
        echo "✅ Host: ${{ github.event.inputs.rdp_host }}"
        echo "✅ Username: ${{ github.event.inputs.rdp_username }}"
        echo "✅ Date: $(date)"
        echo "✅ Workflow: ${{ github.workflow }}"
        echo "✅ Run ID: ${{ github.run_id }}"
        echo ""
        echo "📁 DOSSIERS CRÉÉS:"
        echo "├── sessions/${{ github.event.inputs.session_name }}/"
        echo "│   ├── files/ (fichiers extraits)"
        echo "│   ├── system_info/ (infos système)"
        echo "│   ├── applications/ (apps installées)"
        echo "│   ├── logs/ (logs d'extraction)"
        echo "│   ├── screenshots/ (captures d'écran)"
        echo "│   └── metadata.json (métadonnées)"
        echo "└── sessions/${{ github.event.inputs.session_name }}.zip (archive)"
        echo ""
        echo "📊 STATISTIQUES:"
        echo "📂 Dossiers extraits: 6 dossiers principaux"
        echo "📋 Fichiers d'infos: 10+ fichiers système"
        echo "🗜️ Archive créée: sessions/${{ github.event.inputs.session_name }}.zip"
        echo "💾 Sauvegarde: Repository GitHub"
        echo "📦 Artifact: rdp-session-${{ github.event.inputs.session_name }}"
        echo ""
        echo "🚀 PROCHAINES ÉTAPES:"
        echo "1. 📋 Consultez le dossier sessions/${{ github.event.inputs.session_name }}/"
        echo "2. 📖 Lisez le README.md de la session"
        echo "3. 📦 Téléchargez l'archive depuis les Artifacts"
        echo "4. 🔍 Explorez les données extraites"
        echo ""
        echo "=================================================="
        echo "🎉 EXTRACTION RDP TERMINÉE AVEC SUCCÈS !"
        echo "=================================================="
        echo ""
        
        # Afficher le contenu du dossier
        echo "📁 CONTENU DU DOSSIER DE SESSION:"
        ls -la "./sessions/${{ github.event.inputs.session_name }}/"
        echo ""
        
        # Afficher les tailles des fichiers
        echo "📊 TAILLES DES FICHIERS:"
        du -sh "./sessions/${{ github.event.inputs.session_name }}"/* 2>/dev/null || echo "Fichiers en cours de création..."
        echo ""
        
        echo "✅ Workflow terminé avec succès !"
